import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as n,c,a as e,b as t,d as i,e as l,f as r}from"./app-35f47e06.js";const o={},h=r('<h1 id="安装与编译" tabindex="-1"><a class="header-anchor" href="#安装与编译" aria-hidden="true">#</a> 安装与编译</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><h4 id="学习文档链接" tabindex="-1"><a class="header-anchor" href="#学习文档链接" aria-hidden="true">#</a> 学习文档链接</h4>',3),u={href:"https://www.tslang.cn/docs/release-notes/typescript-3.1.html",target:"_blank",rel:"noopener noreferrer"},p=e("br",null,null,-1),v={href:"http://ts.xcatliu.com/",target:"_blank",rel:"noopener noreferrer"},m=r(`<h4 id="文档笔记的ts版本" tabindex="-1"><a class="header-anchor" href="#文档笔记的ts版本" aria-hidden="true">#</a> 文档笔记的ts版本</h4><p><code>Version 5.1.3</code></p><h4 id="typescript的作用" tabindex="-1"><a class="header-anchor" href="#typescript的作用" aria-hidden="true">#</a> TypeScript的作用</h4><p>1.更加严格的语法，进行类型检测，减少运行时bug产生的概率。<br> 2.开发大型项目，更便于后期维护。</p><h4 id="typescript与javascript的关系" tabindex="-1"><a class="header-anchor" href="#typescript与javascript的关系" aria-hidden="true">#</a> TypeScript与JavaScript的关系</h4><p>1.ts需要编译为js代码后才能被浏览器执行<br> 2.ts完全兼容js代码</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//全局安装
npm install -g typescript
//检查版本号
tsc -v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编译" tabindex="-1"><a class="header-anchor" href="#编译" aria-hidden="true">#</a> 编译</h2><h3 id="手动编译" tabindex="-1"><a class="header-anchor" href="#手动编译" aria-hidden="true">#</a> 手动编译</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>tsc 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="vscode自动编译" tabindex="-1"><a class="header-anchor" href="#vscode自动编译" aria-hidden="true">#</a> vscode自动编译</h3><p>1.通过命令初始化生成 ts 配置文件，命令执行结束后会生成一个 tsconfig.json 文件<br></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>tsc --init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.修改tsconfig.json配置项</p><ul><li>修改编译后的js文件输出路径</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;outDir&quot;: &quot;./&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>编译后的语法</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;target&quot;: &quot;es2016&quot;,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>是否启用严格模式</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;strict&quot;: true,  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3.配置 vscode 自动编译<br></p><ul><li>vscode菜单→运行任务→显示所有任务→tsc监视</li></ul>`,23);function x(b,g){const a=d("ExternalLinkIcon");return n(),c("div",null,[h,e("p",null,[e("a",u,[t("TypeScript官方文档"),i(a)]),p,e("a",v,[t("TypeScript在线文档 非官方文档"),i(a)])]),m,l(" <CommentService /> ")])}const q=s(o,[["render",x],["__file","index.html.vue"]]);export{q as default};
